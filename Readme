proyecto/
├── app.js                    # Archivo principal (solo configuración básica)
├── routes/
│   ├── authRoutes.js        # Rutas: /register y /login
│   └── userRoutes.js        # Otras rutas de usuarios
├── controllers/
│   ├── registerController.js # Lógica SOLO de registro
│   └── loginController.js    # Lógica SOLO de login
├── middleware/
│   └── auth.js              # Verificación de tokens
└── utils/
    └── sanitizer.js         # Funciones de sanitización


Peticiones Prueba

# Registro de usuarios 
curl -X POST http://localhost:3000/api/auth/register -H "Content-Type: application/json" -d '{
  "Nombre": "Juan Flores",
  "Correo": "juan@test.com",
  "Passwd": "test123"
}'
Esta configurado para que los parametros de Nombre no sobre pase longitud de 100, Correo logitud maxima 100, Passwd lonjitud maxima 255

Contiene sanitizadores contra SQLi /utils/sanitizer.js
La logica de registro esta en /controllers/authController.js


#Login 
curl -X POST http://localhost:3000/api/auth/login -H "Content-Type: application/json" -d '{
  "Correo": "juan@test.com",
  "Passwd": "test123"
}'

Tenemos los estados dentro de la tabla de users Estado bolean si es True permite el acceso , el JWT contine la infromacion si es admin o no  
JWT con duracion de 12 horas
{
  "userId": 1,
  "nombre": "Juan",
  "correo": "juan@test.com",
  "isAdmin": true,
  "iat": 1670250000,    // Issued at (cuándo se creó)
  "exp": 1670293200     // Expires (cuándo expira)
}